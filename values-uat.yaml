environment: uat

regcred:
  registryCredentials:
    - url: ghcr.io
      username: 'mars-office'
      password: '${GH_TOKEN}'

mongodb:
  settings:
    rootPassword: '${MONGODB_PASSWORD}'
  storage:
    requestedSize: 10Gi


dex:
  config:
    issuer: "https://dex.uat.huna2.com"
    staticClients:
      - id: ui
        redirectURIs:
          - 'https://uat.huna2.com/'
        name: 'UI'
        public: true
    connectors:
      - type: google
        id: google
        name: Google
        config:
          clientID: '${GOOGLE_CLIENT_ID}'
          clientSecret: '${GOOGLE_CLIENT_SECRET}'
          redirectURI: https://dex.uat.huna2.com/callback
      - type: microsoft
        id: microsoft
        name: Microsoft
        config:
          clientID: '${MICROSOFT_CLIENT_ID}'
          clientSecret: '${MICROSOFT_CLIENT_SECRET}'
          redirectURI: https://dex.uat.huna2.com/callback
      - type: oauth
        id: facebook 
        name: Facebook
        config:
          clientID: '${FACEBOOK_CLIENT_ID}'
          clientSecret: '${FACEBOOK_CLIENT_SECRET}'
          redirectURI: https://dex.uat.huna2.com/callback
          tokenURL: https://graph.facebook.com/v16.0/oauth/access_token
          authorizationURL: https://facebook.com/dialog/oauth
          userInfoURL: https://graph.facebook.com/v16.0/me?fields=id,name,email
          scopes:
            - public_profile
            - email
          claimMapping:
            userNameKey: 'name'
            # preferredUsernameKey: ''
            # groupsKey: ''
            emailKey: 'email'
            # emailVerifiedKey: ''

  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      
    hosts: 
      - host: dex.uat.huna2.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: dex-ingress-tls
        hosts:
          - dex.uat.huna2.com

redis:
  password: '${REDIS_PASSWORD}'
  redisConfig: |
    requirepass ${REDIS_PASSWORD}



rabbitmq:
  password: '${RABBITMQ_PASSWORD}'
  env:
    - name: RABBITMQ_DEFAULT_USER
      value: admin
    - name: RABBITMQ_DEFAULT_PASS
      value: '${RABBITMQ_PASSWORD}'
    - name: ERLANG_COOKIE
      value: '${RABBITMQ_ERLANG_COOKIE}'

huna-ui:
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      
    hosts:
      - host: uat.huna2.com
        paths:
          - path: '/'
            pathType: ImplementationSpecific
    tls:
      - secretName: huna-ingress-tls
        hosts:
          - uat.huna2.com

huna-users:
  env:
    - name: NODE_ENV
      value: uat
    - name: OTEL_TRACES_EXPORTER
      value: 'otlp'
    - name: OTEL_METRICS_EXPORTER
      value: 'otlp'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: 'http://collector.linkerd-jaeger:4318'
    - name: OTEL_SERVICE_NAME
      value: 'huna-users'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'false'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
  ingress:
    hosts:
      - host: uat.huna2.com
        paths:
          - path: /api/users
            pathType: ImplementationSpecific


huna-signalr:
  env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Staging
    - name: OTEL_TRACES_EXPORTER
      value: 'otlp'
    - name: OTEL_METRICS_EXPORTER
      value: 'otlp'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: 'http://collector.linkerd-jaeger:4318'
    - name: OTEL_SERVICE_NAME
      value: 'huna-signalr'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'false'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
    - name: REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: redisPassword
    - name: RABBITMQ_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: rabbitmqPassword
  ingress:
    hosts:
      - host: uat.huna2.com
        paths:
          - path: /api/signalr
            pathType: ImplementationSpecific


opa:
  styraDasToken: '${STYRA_DAS_TOKEN}'

huna-notifications:
  env:
    - name: NODE_ENV
      value: dev
    - name: OTEL_TRACES_EXPORTER
      value: 'otlp'
    - name: OTEL_METRICS_EXPORTER
      value: 'otlp'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: 'http://collector.linkerd-jaeger:4318'
    - name: OTEL_SERVICE_NAME
      value: 'huna-notifications'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'false'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
    - name: MONGODB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: mongodbPassword
    - name: RABBITMQ_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: rabbitmqPassword
  ingress:
    hosts:
      - host: uat.huna2.com
        paths:
          - path: /api/notifications
            pathType: ImplementationSpecific