environment: uat

regcred:
  registryCredentials:
    - url: ghcr.io
      username: 'mars-office'
      password: '${GH_TOKEN}'

mongodb:
  settings:
    rootPassword: '${MONGODB_PASSWORD}'
  storage:
    requestedSize: 10Gi


idp:
  config: |
    appname = casdoor
    httpport = 80
    runmode = prod
    SessionOn = true
    copyrequestbody = true
    driverName = sqlite
    dataSourceName = file:casdoor.db?cache=shared
    dbName = casdoor
    redisEndpoint = huna-redis,9,${REDIS_PASSWORD}
    defaultStorageProvider =
    isCloudIntranet = false
    authState = "casdoor"
    socks5Proxy = ""
    verificationCodeTimeout = 10
    initScore = 0
    logPostOnly = true
    origin = idp.uat.huna2.com
    enableGzip = true
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      
    hosts: 
      - host: idp.uat.huna2.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: dex-ingress-tls
        hosts:
          - idp.uat.huna2.com

redis:
  password: '${REDIS_PASSWORD}'
  redisConfig: |
    requirepass ${REDIS_PASSWORD}



rabbitmq:
  password: '${RABBITMQ_PASSWORD}'
  env:
    - name: RABBITMQ_DEFAULT_USER
      value: admin
    - name: RABBITMQ_DEFAULT_PASS
      value: '${RABBITMQ_PASSWORD}'
    - name: ERLANG_COOKIE
      value: '${RABBITMQ_ERLANG_COOKIE}'

huna-ui:
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      
    hosts:
      - host: uat.huna2.com
        paths:
          - path: '/'
            pathType: ImplementationSpecific
    tls:
      - secretName: huna-ingress-tls
        hosts:
          - uat.huna2.com

huna-users:
  env:
    - name: NODE_ENV
      value: uat
    - name: OTEL_TRACES_EXPORTER
      value: 'otlp'
    - name: OTEL_METRICS_EXPORTER
      value: 'otlp'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: 'http://collector.linkerd-jaeger:4318'
    - name: OTEL_SERVICE_NAME
      value: 'huna-users'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'false'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
  ingress:
    hosts:
      - host: uat.huna2.com
        paths:
          - path: /api/users
            pathType: ImplementationSpecific


huna-signalr:
  env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Staging
    - name: OTEL_TRACES_EXPORTER
      value: 'otlp'
    - name: OTEL_METRICS_EXPORTER
      value: 'otlp'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: 'http://collector.linkerd-jaeger:4318'
    - name: OTEL_SERVICE_NAME
      value: 'huna-signalr'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'false'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
    - name: REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: redisPassword
    - name: RABBITMQ_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: rabbitmqPassword
  ingress:
    hosts:
      - host: uat.huna2.com
        paths:
          - path: /api/signalr
            pathType: ImplementationSpecific


opa:
  styraDasToken: '${STYRA_DAS_TOKEN}'

mail:
  mailjetApiKey: '${MAILJET_API_KEY}'
  mailjetSecretKey: '${MAILJET_SECRET_KEY}'
  fromEmail: '${FROM_EMAIL}'

push:
  privateVapidKey: '${PRIVATE_VAPID_KEY}'
  publicVapidKey: '${PUBLIC_VAPID_KEY}'
  vapidEmail: '${VAPID_EMAIL}'

huna-notifications:
  env:
    - name: NODE_ENV
      value: dev
    - name: OTEL_TRACES_EXPORTER
      value: 'otlp'
    - name: OTEL_METRICS_EXPORTER
      value: 'otlp'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: 'http://collector.linkerd-jaeger:4318'
    - name: OTEL_SERVICE_NAME
      value: 'huna-notifications'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'false'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
    - name: MONGODB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: mongodbPassword
    - name: RABBITMQ_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: rabbitmqPassword
    - name: PUBLIC_VAPID_KEY
      valueFrom:
        secretKeyRef:
          name: huna
          key: publicVapidKey
    - name: PRIVATE_VAPID_KEY
      valueFrom:
        secretKeyRef:
          name: huna
          key: privateVapidKey
    - name: VAPID_EMAIL
      valueFrom:
        secretKeyRef:
          name: huna
          key: vapidEmail
    - name: MAILJET_API_KEY
      valueFrom:
        secretKeyRef:
          name: huna
          key: mailjetApiKey
    - name: MAILJET_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: huna
          key: mailjetSecretKey
    - name: FROM_EMAIL
      valueFrom:
        secretKeyRef:
          name: huna
          key: fromEmail
    - name: UI_URL
      value: 'https://uat.huna2.com'
  ingress:
    hosts:
      - host: uat.huna2.com
        paths:
          - path: /api/notifications
            pathType: ImplementationSpecific