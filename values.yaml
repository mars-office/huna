environment: local

regcred:
  nameOverride: 'regcred'
  fullnameOverride: 'regcred'
  registryCredentials:
    - url: ghcr.io
      username: ''
      password: ''

mongodb:
  podAnnotations:
    linkerd.io/inject: enabled
  storage:
    requestedSize: 10Gi
  settings:
    rootUsername: 'admin'
    rootPassword: ''


mongo-express:
  siteCookieSecret: ''
  siteSessionSecret: ''
  mongodbServer: 'huna-mongodb'
  basicAuthUsername: 'admin'
  basicAuthPassword: ''
  mongodbEnableAdmin: true
  mongodbAuthDatabase: 'admin'
  mongodbAdminPassword: ''
  mongodbAdminUsername: 'admin'
  podAnnotations:
    linkerd.io/inject: enabled
  ingress:
    enabled: true
    hosts:
      - host: mongodb.local.huna2.com
        paths:
          - '/'
    annotations:
      cert-manager.io/cluster-issuer: root-ca
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    tls:
      - secretName: mongodb-ingress-tls
        hosts:
          - mongodb.local.huna2.com

  
dex:
  rbac:
    create: false
    createClusterScoped: false
  persistence:
    size: 1Gi
  volumes:
    - name: dex-data
      persistentVolumeClaim:
        claimName: huna-dex-data
  volumeMounts:
    - mountPath: "/data"
      name: dex-data
  config:
    expiry:
      idTokens: "15m"
    issuer: "https://dex.local.huna2.com"
    web:
      allowedOrigins: ['*']
    storage:
      type: sqlite3
      config:
        file: /data/dex.db
    enablePasswordDB: false
    oauth2:
      skipApprovalScreen: true
    frontend:
      issuer: huna2
      theme: dark
      alwaysShowLoginScreen: false
  podAnnotations:
    linkerd.io/inject: enabled

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: root-ca
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    hosts: 
      - host: dex.local.huna2.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: dex-ingress-tls
        hosts:
          - dex.local.huna2.com

emqx:
  ssl:
    enabled: true
    useExisting: true
    existingName: huna-iot-ca-secret
  emqxConfig:
    EMQX_CLUSTER__DISCOVERY_STRATEGY: "dns"
    EMQX_DASHBOARD__DEFAULT_USERNAME: "admin"
    EMQX_DASHBOARD__DEFAULT_PASSWORD: ""
  podAnnotations:
    linkerd.io/inject: enabled
  replicaCount: 1
  persistence:
    enabled: true
    size: 1Gi
  ingress:
    dashboard:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: root-ca
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/service-upstream: "true"
      path: /
      pathType: ImplementationSpecific
      hosts:
        - emqx-admin.local.huna2.com
      tls:
        - secretName: emqx-dashboard-ingress-tls
          hosts:
            - emqx-admin.local.huna2.com
    # mqtt:
    #   enabled: true
    #   annotations:
    #     kubernetes.io/ingress.class: haproxy
    #     haproxy-ingress.github.io/tcp-service-port: "8883"
    #     haproxy-ingress.github.io/proxy-protocol: "v2"
    #   path: /
    #   pathType: ImplementationSpecific
    #   hosts:
    #     - emqx.local.huna2.com
    #   tls:
    #     - secretName: emqx-ingress-tls
    #       hosts:
    #         - emqx.local.huna2.com

huna-ui:
  imagePullSecrets:
    - name: regcred
  podAnnotations:
    linkerd.io/inject: enabled
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: root-ca
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    hosts:
      - host: local.huna2.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: huna-ingress-tls
        hosts:
          - local.huna2.com

huna-parkinglots:
  env:
    - name: IOT_CA_CRT
      valueFrom:
        secretKeyRef:
          name: huna-iot-ca-secret
          key: 'tls.crt'
    - name: IOT_CA_KEY
      valueFrom:
        secretKeyRef:
          name: huna-iot-ca-secret
          key: 'tls.key'
    - name: NODE_ENV
      value: local
    - name: OTEL_TRACES_EXPORTER
      value: 'none'
    - name: OTEL_METRICS_EXPORTER
      value: 'none'
    - name: OTEL_LOGS_EXPORTER
      value: 'none'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: ''
    - name: OTEL_SERVICE_NAME
      value: 'huna-parkinglots'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'true'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
    - name: MONGODB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: mongodbPassword
  imagePullSecrets:
    - name: regcred
  podAnnotations:
    linkerd.io/inject: enabled
  podLabels:
    opa: "true"
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    hosts:
      - host: local.huna2.com
        paths:
          - path: /api/parkinglots
            pathType: ImplementationSpecific


huna-users:
  env:
    - name: NODE_ENV
      value: local
    - name: OTEL_TRACES_EXPORTER
      value: 'none'
    - name: OTEL_METRICS_EXPORTER
      value: 'none'
    - name: OTEL_LOGS_EXPORTER
      value: 'none'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: ''
    - name: OTEL_SERVICE_NAME
      value: 'huna-users'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'true'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
    - name: MONGODB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: mongodbPassword
  imagePullSecrets:
    - name: regcred
  podAnnotations:
    linkerd.io/inject: enabled
  podLabels:
    opa: "true"
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    hosts:
      - host: local.huna2.com
        paths:
          - path: /api/users
            pathType: ImplementationSpecific

ota:
  persistence:
    size: 512Mi

huna-ota:
  volumes:
    - name: ota-data
      persistentVolumeClaim:
        claimName: huna-ota
  volumeMounts:
    - mountPath: "/firmware"
      name: ota-data
      readOnly: true
  env:
    - name: NODE_ENV
      value: local
    - name: OTEL_TRACES_EXPORTER
      value: 'none'
    - name: OTEL_METRICS_EXPORTER
      value: 'none'
    - name: OTEL_LOGS_EXPORTER
      value: 'none'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: ''
    - name: OTEL_SERVICE_NAME
      value: 'huna-ota'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'true'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
  imagePullSecrets:
    - name: regcred
  podAnnotations:
    linkerd.io/inject: enabled
  podLabels:
    opa: "true"
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: root-ca
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/auth-tls-secret: "huna/huna-iot-ca-secret"
      nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
      nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
      nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    hosts:
      - host: ota.local.huna2.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: huna-ota-ingress-tls
        hosts:
          - ota.local.huna2.com

huna-detection:
  env:
    - name: NODE_ENV
      value: local
    - name: OTEL_TRACES_EXPORTER
      value: 'none'
    - name: OTEL_METRICS_EXPORTER
      value: 'none'
    - name: OTEL_LOGS_EXPORTER
      value: 'none'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: ''
    - name: OTEL_SERVICE_NAME
      value: 'huna-detection'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'true'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
    - name: MONGODB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: mongodbPassword
  imagePullSecrets:
    - name: regcred
  podAnnotations:
    linkerd.io/inject: enabled
  podLabels:
    opa: "true"
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    hosts:
      - host: local.huna2.com
        paths:
          - path: /api/detection
            pathType: ImplementationSpecific

huna-iot:
  imagePullSecrets:
    - name: regcred
  volumes:
    - name: ota-data
      persistentVolumeClaim:
        claimName: huna-ota
  volumeMounts:
    - mountPath: "/firmware"
      name: ota-data

opa:
  styraDasToken: ''

iotCa:
  ou: local.huna2.com