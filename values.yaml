regcred:
  nameOverride: 'regcred'
  fullnameOverride: 'regcred'
  registryCredentials:
    - url: ghcr.io
      username: ''
      password: ''

mongodb:
  podAnnotations:
    linkerd.io/inject: enabled
  storage:
    requestedSize: 10Gi
  settings:
    rootUsername: 'admin'
    rootPassword: ''

redis:
  useDeploymentWhenNonHA: false
  password: ''
  haMode:
    enabled: false
  podAnnotations:
    linkerd.io/inject: enabled
  storage:
    requestedSize: 1Gi
  env:
    - name: REDISPASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: redisPassword
  args:
    - '--requirepass $(REDISPASSWORD)'
    - '--protected-mode yes'

rabbitmq:
  ingress:
    enabled: true
    hosts:
      - host: rabbitmq.local.huna2.com
        paths:
          - '/'
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    tls:
      - secretName: rabbitmq-ingress-tls
        hosts:
          - rabbitmq.local.huna2.com
  podAnnotations:
    linkerd.io/inject: enabled
  storage:
    requestedSize: 1Gi
  authentication:
    user: 'admin'
    password: ''
    erlangCookie: ''

mongo-express:
  image:
    tag: "latest"
  siteCookieSecret: ''
  siteSessionSecret: ''
  mongodbServer: 'huna-mongodb'
  basicAuthUsername: 'admin'
  basicAuthPassword: ''
  mongodbEnableAdmin: true
  mongodbAuthDatabase: 'admin'
  mongodbAdminPassword: ''
  mongodbAdminUsername: 'admin'
  podAnnotations:
    linkerd.io/inject: enabled
  ingress:
    enabled: true
    hosts:
      - host: mongodb.local.huna2.com
        paths:
          - '/'
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    tls:
      - secretName: mongodb-ingress-tls
        hosts:
          - mongodb.local.huna2.com

redis-commander:
  redis:
    host: 'huna-redis'
    password: ''
  podAnnotations:
    linkerd.io/inject: enabled
  httpAuth:
    username: "admin"
    password: ""
  ingress:
    enabled: true
    hosts:
      - host: redis.local.huna2.com
        paths:
          - '/'
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    tls:
      - secretName: redis-ingress-tls
        hosts:
          - redis.local.huna2.com
  
dex:
  config:
    issuer: "https://dex.local.huna2.com"
    web:
      allowedOrigins: ['*']
    storage:
      type: memory
    enablePasswordDB: false
    oauth2:
      skipApprovalScreen: true
    frontend:
      issuer: huna2
      # logoURL: "transparent"
      theme: dark
      alwaysShowLoginScreen: false
  podAnnotations:
    linkerd.io/inject: enabled

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
      # nginx.ingress.kubernetes.io/enable-cors: "true"
    hosts: 
      - host: dex.local.huna2.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: dex-ingress-tls
        hosts:
          - dex.local.huna2.com


huna-ui:
  volumes:
    - configMap:
        name: huna-ui
      name: huna-ui-configmap-volume
  volumeMounts:
    - mountPath: /usr/share/nginx/html/config
      name: huna-ui-configmap-volume
  imagePullSecrets:
    - name: regcred
  podAnnotations:
    linkerd.io/inject: enabled
    openpolicyagent.com/inject: "true"
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    hosts:
      - host: local.huna2.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: huna-ingress-tls
        hosts:
          - local.huna2.com