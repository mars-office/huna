regcred:
  nameOverride: 'regcred'
  fullnameOverride: 'regcred'
  registryCredentials:
    - url: ghcr.io
      username: ''
      password: ''

mongodb:
  podAnnotations:
    linkerd.io/inject: enabled
  storage:
    requestedSize: 10Gi
  settings:
    rootUsername: 'admin'
    rootPassword: ''

redis:
  useDeploymentWhenNonHA: false
  password: ''
  haMode:
    enabled: false
  podAnnotations:
    linkerd.io/inject: enabled
  storage:
    requestedSize: 1Gi
  env:
    - name: REDISPASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: redisPassword
  args:
    - '--requirepass $(REDISPASSWORD)'
    - '--protected-mode yes'

rabbitmq:
  ingress:
    enabled: true
    hosts:
      - host: rabbitmq.huna2.local
        paths:
          - '/'
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    tls:
      - secretName: rabbitmq-ingress-tls
        hosts:
          - rabbitmq.huna2.local
  podAnnotations:
    linkerd.io/inject: enabled
  storage:
    requestedSize: 1Gi
  authentication:
    user: 'admin'
    password: ''
    erlangCookie: ''

mongo-express:
  image:
    tag: "latest"
  siteCookieSecret: ''
  siteSessionSecret: ''
  mongodbServer: 'huna-mongodb'
  basicAuthUsername: 'admin'
  basicAuthPassword: ''
  mongodbEnableAdmin: true
  mongodbAuthDatabase: 'admin'
  mongodbAdminPassword: ''
  mongodbAdminUsername: 'admin'
  podAnnotations:
    linkerd.io/inject: enabled
  ingress:
    enabled: true
    hosts:
      - host: mongodb.huna2.local
        paths:
          - '/'
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    tls:
      - secretName: mongodb-ingress-tls
        hosts:
          - mongodb.huna2.local

redis-commander:
  redis:
    host: 'huna-redis'
    password: ''
  podAnnotations:
    linkerd.io/inject: enabled
  httpAuth:
    username: "admin"
    password: ""
  ingress:
    enabled: true
    hosts:
      - host: redis.huna2.local
        paths:
          - '/'
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    tls:
      - secretName: redis-ingress-tls
        hosts:
          - redis.huna2.local
  
dex:
  config:
    issuer: "https://dex.huna2.local"
    storage:
      type: memory
    enablePasswordDB: true
    connectors:
      - type: google
        id: google
        name: Google
        config:
          # Connector config values starting with a "$" will read from the environment.
          clientID: $GOOGLE_CLIENT_ID
          clientSecret: $GOOGLE_CLIENT_SECRET
          # Dex's issuer URL + "/callback"
          redirectURI: http://dex.huna2.local/callback/google

      - type: microsoft
        # Required field for connector id.
        id: microsoft
        # Required field for connector name.
        name: Microsoft
        config:
          # Credentials can be string literals or pulled from the environment.
          clientID: $MICROSOFT_APPLICATION_ID
          clientSecret: $MICROSOFT_CLIENT_SECRET
          redirectURI: http://dex.huna2.local/callback/microsoft
      
      - type: facebook
        # Required field for connector id.
        id: facebook
        # Required field for connector name.
        name: Facebook
        config:
          # Credentials can be string literals or pulled from the environment.
          clientID: $FACEBOOK_CLIENT_ID
          clientSecret: $FACEBOOK_CLIENT_SECRET
          redirectURI: http://dex.huna2.local/callback/facebook
    
  podAnnotations:
    linkerd.io/inject: enabled

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts: 
      - host: dex.huna2.local
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: dex-ingress-tls
        hosts:
          - dex.huna2.local