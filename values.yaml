environment: local

regcred:
  nameOverride: 'regcred'
  fullnameOverride: 'regcred'
  registryCredentials:
    - url: ghcr.io
      username: ''
      password: ''

mongodb:
  podAnnotations:
    linkerd.io/inject: enabled
  storage:
    requestedSize: 10Gi
  settings:
    rootUsername: 'admin'
    rootPassword: ''

rabbitmq:
  password: ''
  podAnnotations:
    linkerd.io/inject: enabled
  storage:
    requestedSize: 1Gi
  env:
    - name: RABBITMQ_DEFAULT_USER
      value: admin
    - name: RABBITMQ_DEFAULT_PASS
      value: ''
    - name: ERLANG_COOKIE
      value: ''
  
idp:
  extraVolumeMounts:
    - mountPath: /init_data.json
      name: casdoor-init-data-volume
      subPath: init_data.json
  extraVolumes:
    - configMap:
        name: huna-casdoor-init-data
      name: casdoor-init-data-volume
  service:
    port: 80
  config: |
    appname = casdoor
    httpport = 80
    runmode = prod
    SessionOn = true
    copyrequestbody = true
    driverName = sqlite
    dataSourceName = file:casdoor.db?cache=shared
    dbName = casdoor
    redisEndpoint = huna-redis,9,
    defaultStorageProvider =
    isCloudIntranet = false
    authState = "casdoor"
    socks5Proxy = ""
    verificationCodeTimeout = 10
    initScore = 0
    logPostOnly = true
    origin = idp.local.huna2.com
    enableGzip = true
  podAnnotations:
    linkerd.io/inject: enabled
  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: root-ca
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    hosts: 
      - host: idp.local.huna2.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: dex-ingress-tls
        hosts:
          - idp.local.huna2.com


redis:
  password: ''
  redisConfig: |
    requirepass
  useDeploymentWhenNonHA: false
  podAnnotations:
    linkerd.io/inject: enabled
  storage:
    requestedSize: 1Gi

huna-ui:
  imagePullSecrets:
    - name: regcred
  podAnnotations:
    linkerd.io/inject: enabled
  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: root-ca
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    hosts:
      - host: local.huna2.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: huna-ingress-tls
        hosts:
          - local.huna2.com

huna-users:
  env:
    - name: NODE_ENV
      value: local
    - name: OTEL_TRACES_EXPORTER
      value: 'none'
    - name: OTEL_METRICS_EXPORTER
      value: 'none'
    - name: OTEL_LOGS_EXPORTER
      value: 'none'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: ''
    - name: OTEL_SERVICE_NAME
      value: 'huna-users'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'true'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
  imagePullSecrets:
    - name: regcred
  podAnnotations:
    linkerd.io/inject: enabled
  podLabels:
    opa: "true"
  ingress:
    enabled: true
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    hosts:
      - host: local.huna2.com
        paths:
          - path: /api/users
            pathType: ImplementationSpecific

huna-signalr:
  env:
    - name: ASPNETCORE_ENVIRONMENT
      value: Development
    - name: OTEL_TRACES_EXPORTER
      value: 'none'
    - name: OTEL_METRICS_EXPORTER
      value: 'none'
    - name: OTEL_LOGS_EXPORTER
      value: 'none'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: ''
    - name: OTEL_SERVICE_NAME
      value: 'huna-signalr'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'true'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
    - name: REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: redisPassword
    - name: RABBITMQ_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: rabbitmqPassword
  imagePullSecrets:
    - name: regcred
  podAnnotations:
    linkerd.io/inject: enabled
  podLabels:
    opa: "true"
  ingress:
    enabled: true
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/affinity: "cookie"
      nginx.ingress.kubernetes.io/session-cookie-expires: "86400"
      nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
      nginx.ingress.kubernetes.io/affinity-mode: balanced
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    hosts:
      - host: local.huna2.com
        paths:
          - path: /api/signalr
            pathType: ImplementationSpecific


opa:
  styraDasToken: ''

mail:
  mailjetApiKey: ''
  mailjetSecretKey: ''
  fromEmail: ''

push:
  privateVapidKey: ''
  publicVapidKey: ''
  vapidEmail: ''

huna-notifications:
  env:
    - name: NODE_ENV
      value: local
    - name: OTEL_TRACES_EXPORTER
      value: 'none'
    - name: OTEL_METRICS_EXPORTER
      value: 'none'
    - name: OTEL_LOGS_EXPORTER
      value: 'none'
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: ''
    - name: OTEL_SERVICE_NAME
      value: 'huna-notifications'
    - name: OTEL_PROPAGATORS
      value: 'b3,b3multi'
    - name: OTEL_SDK_DISABLED
      value: 'true'
    - name: OTEL_NODE_RESOURCE_DETECTORS
      value: 'env,host,os'
    - name: MONGODB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: mongodbPassword
    - name: RABBITMQ_PASSWORD
      valueFrom:
        secretKeyRef:
          name: huna
          key: rabbitmqPassword
    - name: PUBLIC_VAPID_KEY
      valueFrom:
        secretKeyRef:
          name: huna
          key: publicVapidKey
    - name: PRIVATE_VAPID_KEY
      valueFrom:
        secretKeyRef:
          name: huna
          key: privateVapidKey
    - name: VAPID_EMAIL
      valueFrom:
        secretKeyRef:
          name: huna
          key: vapidEmail
    - name: MAILJET_API_KEY
      valueFrom:
        secretKeyRef:
          name: huna
          key: mailjetApiKey
    - name: MAILJET_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: huna
          key: mailjetSecretKey
    - name: FROM_EMAIL
      valueFrom:
        secretKeyRef:
          name: huna
          key: fromEmail
    - name: UI_URL
      value: 'https://local.huna2.com'
  imagePullSecrets:
    - name: regcred
  podAnnotations:
    linkerd.io/inject: enabled
  podLabels:
    opa: "true"
  ingress:
    enabled: true
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/service-upstream: "true"
    hosts:
      - host: local.huna2.com
        paths:
          - path: /api/notifications
            pathType: ImplementationSpecific